// src/main/components/Article/Carousel/Carousel.module.scss

.carouselContainer {
  --transition-duration: 300ms;
  position: relative;
  overflow: hidden;
  width: 100%;
  
  // ðŸ”„ Fallback for browsers that don't support aspect-ratio
  min-height: var(--fallback-height, 400px);
  
  // ðŸ”„ Critical: Prevent carousel from exceeding viewport
  max-height: var(--carousel-max-height, 70vh);
  
  // Modern browsers with aspect-ratio support
  @supports (aspect-ratio: 1) {
    // Keep min-height as safety net for edge cases
    min-height: 200px; // Minimum reasonable carousel height
    
    // Mobile Portrait - Small screens get constrained ratios
    @media (max-width: 767px) and (orientation: portrait) {
      aspect-ratio: var(--mobile-portrait-ratio, 0.8);
      max-height: min(calc(100vh - 200px), var(--carousel-max-height, 500px));
    }
    
    // Mobile Landscape - Wider but height-constrained
    @media (max-width: 767px) and (orientation: landscape) {
      aspect-ratio: var(--mobile-landscape-ratio, 1.33);
      max-height: min(calc(100vh - 120px), var(--carousel-max-height, 400px));
    }
    
    // Tablet Portrait - More space available
    @media (min-width: 768px) and (max-width: 1023px) and (orientation: portrait) {
      aspect-ratio: var(--tablet-portrait-ratio, 1);
      max-height: min(calc(100vh - 250px), var(--carousel-max-height, 600px));
    }
    
    // Tablet Landscape - Good balance
    @media (min-width: 768px) and (max-width: 1023px) and (orientation: landscape) {
      aspect-ratio: var(--tablet-landscape-ratio, 1.33);
      max-height: min(calc(100vh - 180px), var(--carousel-max-height, 500px));
    }
    
    // Desktop Portrait - Large vertical space
    @media (min-width: 1024px) and (orientation: portrait) {
      aspect-ratio: var(--desktop-portrait-ratio, 1);
      max-height: min(calc(100vh - 300px), var(--carousel-max-height, 800px));
    }
    
    // Desktop Landscape - Full experience
    @media (min-width: 1024px) and (orientation: landscape) {
      aspect-ratio: var(--desktop-landscape-ratio, 1.5);
      max-height: min(calc(100vh - 200px), var(--carousel-max-height, 700px));
    }
  }
  
  // ðŸ”„ Responsive width constraints
  @media (max-width: 767px) {
    margin: 0 auto;
    max-width: 95vw;
  }
  
  @media (min-width: 768px) and (max-width: 1023px) {
    margin: 0 auto;
    max-width: 90vw;
  }
  
  @media (min-width: 1024px) {
    margin: 0 auto;
    max-width: min(85vw, 1200px);
  }
}

// Preserve existing animation styles
.slide {
  transition: opacity var(--transition-duration) ease-in-out;
}

.carouselImage {
  transition: transform var(--transition-duration) ease-in-out;
  
  &.center-horizontal {
    object-position: center;
    object-fit: cover;
  }
  
  &.center-vertical {
    object-position: center;
    object-fit: cover;
  }
  
  &.square {
    object-fit: cover;
  }
}

.caption {
  transition: transform var(--transition-duration) ease-in-out,
              opacity var(--transition-duration) ease-in-out;
}

// Debug styles for development
@media (prefers-reduced-motion: no-preference) {
  .carouselContainer {
    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      pointer-events: none;
      z-index: 1000;
      
      // Debug grid overlay (only in development)
      @at-root [data-debug="true"] & {
        background-image: 
          linear-gradient(rgba(255, 0, 0, 0.1) 1px, transparent 1px),
          linear-gradient(90deg, rgba(255, 0, 0, 0.1) 1px, transparent 1px);
        background-size: 20px 20px;
        opacity: 0.3;
      }
    }
  }
}

// High contrast mode support
@media (prefers-contrast: high) {
  .carouselContainer {
    border: 2px solid currentColor;
  }
}

// Reduced motion support
@media (prefers-reduced-motion: reduce) {
  .slide,
  .carouselImage,
  .caption {
    transition: none;
  }
  
  .carouselContainer {
    --transition-duration: 0ms;
  }
}